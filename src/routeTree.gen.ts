/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PublicRouteImport } from './routes/_public/route'
import { Route as PublicIndexImport } from './routes/_public/index'
import { Route as PublicAboutImport } from './routes/_public/about'
import { Route as AppDashboardImport } from './routes/_app/dashboard'

// Create/Update Routes

const PublicRouteRoute = PublicRouteImport.update({
  id: '/_public',
  getParentRoute: () => rootRoute,
} as any)

const PublicIndexRoute = PublicIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PublicRouteRoute,
} as any)

const PublicAboutRoute = PublicAboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => PublicRouteRoute,
} as any)

const AppDashboardRoute = AppDashboardImport.update({
  id: '/_app/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_public': {
      id: '/_public'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PublicRouteImport
      parentRoute: typeof rootRoute
    }
    '/_app/dashboard': {
      id: '/_app/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AppDashboardImport
      parentRoute: typeof rootRoute
    }
    '/_public/about': {
      id: '/_public/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof PublicAboutImport
      parentRoute: typeof PublicRouteImport
    }
    '/_public/': {
      id: '/_public/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PublicIndexImport
      parentRoute: typeof PublicRouteImport
    }
  }
}

// Create and export the route tree

interface PublicRouteRouteChildren {
  PublicAboutRoute: typeof PublicAboutRoute
  PublicIndexRoute: typeof PublicIndexRoute
}

const PublicRouteRouteChildren: PublicRouteRouteChildren = {
  PublicAboutRoute: PublicAboutRoute,
  PublicIndexRoute: PublicIndexRoute,
}

const PublicRouteRouteWithChildren = PublicRouteRoute._addFileChildren(
  PublicRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof PublicRouteRouteWithChildren
  '/dashboard': typeof AppDashboardRoute
  '/about': typeof PublicAboutRoute
  '/': typeof PublicIndexRoute
}

export interface FileRoutesByTo {
  '/dashboard': typeof AppDashboardRoute
  '/about': typeof PublicAboutRoute
  '/': typeof PublicIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_public': typeof PublicRouteRouteWithChildren
  '/_app/dashboard': typeof AppDashboardRoute
  '/_public/about': typeof PublicAboutRoute
  '/_public/': typeof PublicIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/dashboard' | '/about' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/dashboard' | '/about' | '/'
  id:
    | '__root__'
    | '/_public'
    | '/_app/dashboard'
    | '/_public/about'
    | '/_public/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  PublicRouteRoute: typeof PublicRouteRouteWithChildren
  AppDashboardRoute: typeof AppDashboardRoute
}

const rootRouteChildren: RootRouteChildren = {
  PublicRouteRoute: PublicRouteRouteWithChildren,
  AppDashboardRoute: AppDashboardRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_public",
        "/_app/dashboard"
      ]
    },
    "/_public": {
      "filePath": "_public/route.tsx",
      "children": [
        "/_public/about",
        "/_public/"
      ]
    },
    "/_app/dashboard": {
      "filePath": "_app/dashboard.tsx"
    },
    "/_public/about": {
      "filePath": "_public/about.tsx",
      "parent": "/_public"
    },
    "/_public/": {
      "filePath": "_public/index.tsx",
      "parent": "/_public"
    }
  }
}
ROUTE_MANIFEST_END */
